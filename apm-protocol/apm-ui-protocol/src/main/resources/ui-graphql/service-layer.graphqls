# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

type ServiceNode implements Node {
    id: ID!
    name: String!
    type: String
    # Success rate of all incoming requests.
    # Max value is 10000.
    sla: Int!
    # The number of incoming calls
    calls: Long!
    # The number of services alerting
    numOfServiceAlarm: Int!
}

type ServiceInfo {
    id: ID!
    name: String
    applicationId: ID!
    applicationName: String
}

type ServiceMetric {
    service: ServiceInfo!
    # The unit is millisecond.
    avgResponseTime: Int!
    cpm: Int!
}

type TraceItem {
    time: String!
    entry: String!
    duration: Int!
}

type ServiceReferenceMetric {
   id: String!
   behindServiceInfo: ServiceInfo!
   frontServiceInfo: ServiceInfo!
   calls: Long!
   errorCalls: Long!
   averageDuration: Int!
}

type ServiceReferenceMetricBrief {
  serviceReferenceMetrics: [ServiceReferenceMetric!]!
  total: Int!
}

enum ServiceReferenceMetricQueryOrder {
  BY_TIME_BUCKET
   BY_TRANSACTION_AVERAGE_DURATION
   BY_TRANSACTION_CALLS
   BY_TRANSACTION_ERROR_CALLS
}

input ServiceReferenceMetricQueryCondition {
  # The value of 0 means all application.
  frontApplicationId: Int
  behindApplicationId: Int
  # The time range of traces started
  queryDuration: Duration
  # The mix time of trace
  minTransactionAverageDuration: Int
  # The max time of trace
  maxTransactionAverageDuration: Int
  queryOrder: ServiceReferenceMetricQueryOrder!
  paging: Pagination!
}

extend type Query {
    searchService(keyword: String!, applicationId: ID!, topN: Int!): [ServiceInfo!]!
    getServiceResponseTimeTrend(serviceId: ID!, duration: Duration!): ResponseTimeTrend
    getServiceThroughputTrend(serviceId: ID!, duration: Duration!): ThroughputTrend
    getServiceSLATrend(serviceId: ID!, duration: Duration!): SLATrend
    getServiceTopology(serviceId: ID!, duration: Duration!): Topology
    queryServiceReferenceMetricBrief(condition: ServiceReferenceMetricQueryCondition): ServiceReferenceMetricBrief
}
